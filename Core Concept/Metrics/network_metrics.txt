อธิบาย Metrics ที่เกี่ยวข้อง
data_sent

ปริมาณข้อมูลที่ถูกส่งออกในคำขอ
ผลลัพธ์ในคอนโซล:
makefile
Copy code
data_sent...............: 10 kB
data_received

ปริมาณข้อมูลที่ได้รับจากเซิร์ฟเวอร์ในคำตอบ
ผลลัพธ์ในคอนโซล:
makefile
Copy code
data_received...........: 500 kB
การแสดงข้อมูลในคอนโซล

ใช้ console.log() เพื่อตรวจสอบขนาดข้อมูลที่ส่งและรับ:
res.request.body.length: ข้อมูลที่ส่งในคำขอ (สำหรับ POST/PUT)
res.body.length: ข้อมูลที่ได้รับจากคำตอบ
การตั้งค่าทดสอบ
จำนวน Virtual Users (vus) และระยะเวลา (duration) กำหนดไว้ใน options เป็น 10 VUs และ 30 วินาที
การรันโค้ด
บันทึกไฟล์เป็น network_metrics.js
ใช้คำสั่ง:
bash
Copy code
k6 run network_metrics.js
ตัวอย่างผลลัพธ์ในคอนโซล
plaintext
Copy code
     data_received...........: 500 kB
     data_sent...............: 10 kB
     http_reqs...............: 100
     http_req_duration.......: avg=150ms min=120ms max=200ms p(95)=180ms
การปรับแต่งเพิ่มเติม
สำหรับคำขอ HTTP POST หรือ PUT:
สามารถเพิ่ม body ในคำขอ เช่น:
javascript
Copy code
const payload = JSON.stringify({ name: 'example', value: 'test' });
const headers = { 'Content-Type': 'application/json' };
const res = http.post(url, payload, { headers });
k6 จะเก็บข้อมูลขนาด data_sent โดยรวม payload ด้วย
สรุป
ตัวอย่างนี้แสดง Metrics เครือข่ายหลักใน k6:

data_sent: ปริมาณข้อมูลที่ส่งออก
data_received: ปริมาณข้อมูลที่ได้รับ